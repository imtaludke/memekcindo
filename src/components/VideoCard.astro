---
// src/components/VideoCard.astro
import { slugify } from '../utils/slugify';
import { url } from '../utils/site.ts';

// Hapus: import { Image } from 'astro:assets';

interface Props {
  video: {
    id: string;
    title: string;
    thumbnail: string;
    thumbnailWidth?: number; // Dipastikan ada dari processedVideos.json
    thumbnailHeight?: number; // Dipastikan ada dari processedVideos.json
    category: string;
    duration?: number;
    views?: number;
    // Add any other properties from VideoData that VideoCard might use
  };
  videoDetailPath: string;
}

const { video, videoDetailPath } = Astro.props;

// Format duration from seconds to MM:SS
function formatDuration(seconds: number): string {
  const minutes = Math.floor(seconds / 60);
  const remainingSeconds = seconds % 60;
  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
}

const formattedDuration = formatDuration(video.duration);

// Format views for readability
function formatViews(views: number): string {
    if (views >= 1000000) {
        return (views / 1000000).toFixed(1) + 'M views';
    }
    if (views >= 1000) {
        return (views / 1000).toFixed(1) + 'K views';
    }
    return views.toString() + ' views';
}
const formattedViews = formatViews(video.views);
---

<div class="video-card" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
  <meta itemprop="uploadDate" content={new Date().toISOString()} /> {/* Placeholder: You might want to add actual date */}
  <meta itemprop="duration" content={`PT${video.duration}S`} />
  <meta itemprop="name" content={video.title} />
  <meta itemprop="description" content={`Video ${video.title} in category ${video.category}.`} />

  <a href={`${url}${videoDetailPath}`} class="video-thumbnail-link">
    <div class="video-thumbnail-wrapper">
      <img
        src={video.thumbnail}
        alt={`Thumbnail for ${video.title}`}
        title={`${video.title} - ${formattedDuration}`}
        width={video.thumbnailWidth}
        height={video.thumbnailHeight}
        loading="lazy"
        itemprop="thumbnailUrl"
      />
      <span class="video-duration">{formattedDuration}</span>
    </div>
  </a>
  <div class="video-info">
    <h3 class="video-title" itemprop="name">
      <a href={`${url}${videoDetailPath}`}>{video.title}</a>
    </h3>
    <p class="video-meta">
      <span class="video-views" itemprop="interactionCount">{formattedViews}</span>
      <span class="video-category">
        <a href={`${url}/category/${slugify(video.category)}/1`} itemprop="isPartOf">
          {video.category}
        </a>
      </span>
    </p>
  </div>
</div>

<style>
  .video-card {
    background-color: var(--card-bg);
    border-radius: var(--border-radius-medium);
    overflow: hidden;
    box-shadow: var(--shadow-light);
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    display: flex;
    flex-direction: column;
    height: 100%; /* Ensure cards are same height */
  }

  .video-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-hover);
  }

  .video-thumbnail-link {
    display: block;
    position: relative;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio (9/16 * 100%) */
    overflow: hidden;
    background-color: var(--background-color); /* Fallback color */
  }

  .video-thumbnail-link img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .video-duration {
    position: absolute;
    bottom: 8px;
    right: 8px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8em;
  }

  .video-info {
    padding: var(--spacing-unit-small);
    flex-grow: 1; /* Allow info section to grow */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .video-title {
    font-size: 1.1em;
    margin-top: 0;
    margin-bottom: var(--spacing-unit-xsmall);
    line-height: 1.3;
  }

  .video-title a {
    text-decoration: none;
    color: var(--heading-color);
    transition: color 0.2s ease-in-out;
  }

  .video-title a:hover {
    color: var(--link-color-hover);
  }

  .video-meta {
    font-size: 0.85em;
    color: var(--text-color-light);
    display: flex;
    justify-content: space-between;
    margin-top: auto; /* Push to bottom if content grows */
  }

  .video-category a {
    color: var(--link-color);
    text-decoration: none;
  }

  .video-category a:hover {
    text-decoration: underline;
  }
</style>
